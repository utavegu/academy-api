БЛИЖАЙШЕЕ:
- персонал-дату в отдельный модуль и интегрировать студентам и преподавателям
- доведение до ума всех имеющихся модулей (пока без валидации, просто ДТО-хотя бы и красивая внутрянка - трай-кэтчи, проверки, выбрасывание ошибок (те, которые ОРМ сам не выбрасывает - тестируй и генерируй самостоятельно)) + хотя бы у одного сервиса должен быть полноценный CRUD
- оставшиеся модули/сущности ("Лекцию" на десерт)
- транзакцию на создание студента/педагога: персональные данные, контакты, всё остальное

Пока что лучше делать перед каждым новым запуском:
docker volume rm academy-api_postgres_data academy-api_pgadmin_data

-------------------------

Реализовать сущности:

Педагоги (teachers/lecturers) +-
Студенты +-
Дисциплины +-
Группы +-
Аудитории
Лекции
Расписание (лекции?)
Успеваемость?

Лекция - начало, конец, день недели, аудитория, педагог, группа или группы, дисциплина

У сущности "лекция" должен быть составной первичный ключ - день недели + время начала + время окончания, которые втроем должны быть уникальны (по отдельности значения повторяться могут, но все 3 вместе должны быть в единственном экземпляре в таблице)
На этом этапе неплохо бы освежить теорию постгреса, чтобы не нафигарить.

Таблицу контактов можно сделать не 1 к 1, а миксином. Но лучше связью.
А вот ФИО и дату рождения у педагогов и студентов точно следует миксином сделать (да чото тоже не... не понравились). Но следует этот вопрос зафиксировать и получше его поизучать. Там ещё и вариант наследования есть... Мне пока связь 1-к-1 больше всего зашла.

Составление расписания в преподской админке - автоматически определяет занятых преподов, аудитории и группы на это время и день

Расписание, вероятно, это не сущность базы, а просто для удобства. А для базы это лекции, которые не могут пересекаться по дням и времени

Фронтенд часть можно сначала сделать на опшинс апи, затем в другой ветке переписать на композишн апи

OAuth 2.0

Тут индексы где-то имеет смысл прикрутить?.. Вообще не похоже - приложение никак не претендует на наличие огромных таблиц. А студенты - слишком частообновляемая.

-------------------------

Моменты, которые нужно продумать/разобраться:
(наскрести из тудусов файлов, по поиску TODO)

А с нэймингом внутри модуля как правильнее - контакт или контактс? (контроллер, сервис, модуль). Сущность-то понятно, что в единственном числе.